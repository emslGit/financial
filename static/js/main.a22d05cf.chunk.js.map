{"version":3,"sources":["components/input/InputComponent.js","components/stats/StatsComponent.js","components/chart-wrapper/ChartWrapperComponent.js","components/add-extras/AddExtrasComponent.js","components/extra/ExtraComponent.js","components/tax/TaxComponent.js","SettingsContext.js","components/settings/SettingsComponent.js","components/App.js","reportWebVitals.js","index.js"],"names":["InputComponent","forwardRef","ref","text","unit","onChange","options","className","type","maxLength","defaultValue","StatsComponent","stat","toLocaleString","replaceAll","ChartWrapperComponent","title","data","xLabel","yLabel","display","fontSize","scales","xAxes","scaleLabel","labelString","yAxes","legend","position","AddExtrasComponent","addExtra","currency","todayYear","Date","getFullYear","eventRef","useRef","firstRef","lastRef","firstImpactRef","lastImpactRef","annualRef","onClick","name","current","value","first","parseInt","last","focus","range","i","push","newExtra","id","Math","floor","random","period","parseFloat","annual","createExtra","ExtraComponent","extra","removeExtra","length","TaxComponent","props","radioRef","seRef","fixRef","useState","radio","setRadio","useImperativeHandle","checked","disabled","SettingsContext","createContext","SettingsComponent","useContext","setSettings","settings","inputIterations","inputPrecision","selectCurrency","useEffect","updateSettings","iterations","precision","App","today","todayMonth","getMonth","total","setTotal","stats","setStats","expenses","setExpenses","extras","setExtras","worst","best","mean","median","sigma","s1","s2","bottomStats","setBottomStats","inputAge","inputRetireAt","inputCapital","inputDuration","inputTax","inputSalary","inputSalaryInc","inputCosts","inputCostsInc","inputROI","inputDeviation","inputFees","inputInflation","String","prototype","capitalize","this","charAt","toUpperCase","slice","calcTax","monthly","max","input","swedishTax","sin","filter","x","analyse","monthsLeft","fees","inflation","roi","deviation","salaryInc","costsInc","workingYears","annualExtras","xtras","Array","fill","map","xtra","p","amount","index","calcAnnualExtras","min","inSalary","inCosts","investedFirstYear","round","totalsCombinedData","finalWorth","avgWorth","statsData","sigmas","outcomes","k","salary","costs","totalsData","Object","years","worth","invested","len","toInvest","totalsBeforeFees","netTotal","normal","sort","a","b","d","arr","reduce","sum","w","sqrt","pow","calcMeanMedianSigma","deviations","no","forEach","diff","ceil","deviationNumber","keys","toPrecision","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointRadius","Provider","s","toLowerCase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a22d05cf.chunk.js","sourcesContent":["import './InputComponent.css';\r\nimport {forwardRef} from \"react\";\r\n\r\n\r\nconst InputComponent = forwardRef(({text, unit, onChange, options}, ref) => {\r\n\r\n  return (\r\n    <span className=\"InputComponent\">\r\n      <p>{text}</p>\r\n      <input\r\n        ref={ref}\r\n        onChange={onChange}\r\n        type={options?.type || 'number'}\r\n        maxLength={options?.maxLength || ''}\r\n        defaultValue={options?.defaultValue || ''}\r\n      />\r\n      {unit &&\r\n        <p>{unit}</p>\r\n      }\r\n    </span>\r\n  );\r\n})\r\n\r\nexport default InputComponent;","import './StatsComponent.css';\r\n\r\n\r\nexport const StatsComponent = ({text, stat}) => {\r\n\r\n  return (\r\n    <span className=\"StatsComponent\">\r\n      <p><b>{text}</b></p>\r\n      <p>{stat[0].toLocaleString().replaceAll(',', ' ') + ' ' + stat[1]}</p>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default StatsComponent;","import {Bar, Line} from \"react-chartjs-2\";\r\nimport './ChartWrapperComponent.css';\r\n\r\n\r\nconst ChartWrapperComponent = ({type, title, data, xLabel, yLabel, legend}) => {\r\n  const options = {\r\n    title:{\r\n      display: true,\r\n        text: title,\r\n        fontSize: 20\r\n    },\r\n    scales: {\r\n      xAxes: [{\r\n        scaleLabel: {\r\n          display: xLabel,\r\n          labelString: xLabel\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        scaleLabel: {\r\n          display: yLabel,\r\n          labelString: yLabel\r\n        }\r\n      }]\r\n    },\r\n    legend:{\r\n      display: legend,\r\n        position: 'bottom'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"ChartWrapperComponent\">\r\n      {(type === 'bar') && <Bar data={data} options={options} />}\r\n      {(type === 'line') && <Line data={data} options={options} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartWrapperComponent;","import './AddExtrasComponent.css';\r\nimport {useRef} from \"react\";\r\n\r\n\r\nconst AddExtrasComponent = ({addExtra, currency}) => {\r\n  const todayYear = new Date().getFullYear()\r\n  const eventRef = useRef(null)\r\n  const firstRef = useRef(null)\r\n  const lastRef = useRef(null)\r\n  const firstImpactRef = useRef(null)\r\n  const lastImpactRef = useRef(null)\r\n  const annualRef = useRef(null)\r\n\r\n  const createExtra = () => {\r\n    const name = eventRef.current?.value\r\n    const first = parseInt(firstRef.current?.value)\r\n    const last = parseInt(lastRef.current?.value || first)\r\n\r\n    if (!name) {\r\n      eventRef.current.focus()\r\n    } else if (first < todayYear) {\r\n      firstRef.current.focus()\r\n    } else if (last < first) {\r\n      lastRef.current.focus()\r\n    } else {\r\n      const range = []\r\n      for (let i = first; i <= last; i++) {\r\n        range.push(i);\r\n      }\r\n\r\n      const newExtra = {\r\n        id: Math.floor(Math.random() * 10000),\r\n        name: eventRef.current?.value,\r\n        period: range,\r\n        first: parseFloat(firstImpactRef.current?.value) || 0,\r\n        last: parseFloat(lastImpactRef.current?.value) || 0,\r\n        annual: parseFloat(annualRef.current?.value) || 0\r\n      }\r\n\r\n      eventRef.current.value = ''\r\n      firstRef.current.value = ''\r\n      lastRef.current.value = ''\r\n      firstImpactRef.current.value = ''\r\n      lastImpactRef.current.value = ''\r\n      annualRef.current.value = ''\r\n\r\n      return newExtra\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddExtrasComponent flex-cols\">\r\n      <span>\r\n        <span>\r\n          <p>Name of event: </p>\r\n          <input ref={eventRef} type=\"text\"/>\r\n        </span>\r\n        <span>\r\n          <p>Starting anno: </p>\r\n          <input ref={firstRef} type=\"number\"/>\r\n        </span>\r\n        <span>\r\n          <p>Ending anno: </p>\r\n          <input ref={lastRef} type=\"number\"/>\r\n        </span>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <p>Initial impact: </p>\r\n          <span>\r\n            <input ref={firstImpactRef} type=\"number\"/>\r\n            <p>{currency}</p>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <p>Final impact: </p>\r\n          <span>\r\n            <input ref={lastImpactRef} type=\"number\"/>\r\n            <p>{currency}</p>\r\n          </span>\r\n        </span>\r\n        <span>\r\n          <p>Annual impact: </p>\r\n          <span>\r\n            <input ref={annualRef} type=\"number\"/>\r\n            <p>{currency}</p>\r\n          </span>\r\n        </span>\r\n      </span>\r\n      <button onClick={() => addExtra(createExtra())}>Add Event</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddExtrasComponent;","import './ExtraComponent.css';\r\n\r\n\r\nconst ExtraComponent = ({extra, currency, removeExtra}) => {\r\n\r\n  return (\r\n    <div className=\"ExtraComponent flex-between\">\r\n      <span className=\"flex-cols\">\r\n        <b>{extra.name}</b>\r\n        <p>\r\n          {(extra.first > 0 ? ' Providing ' : 'Costing ') + extra.first.toLocaleString().replaceAll(',', ' ') + ' ' + currency} at year {extra.period[0]} and\r\n          {(extra.annual > 0 ? ' providing ' : ' costing ') + extra.annual.toLocaleString().replaceAll(',', ' ') + ' ' + currency} every year until {extra.period[extra.period.length - 1]} where\r\n          {' ' + extra.last.toLocaleString().replaceAll(',', ' ') + ' ' + currency} will be {(extra.last > 0 ? ' reimbursed.' : 'deducted.')}\r\n        </p>\r\n      </span>\r\n      <span className=\"flex-center\">\r\n        <button className=\"x-button\" onClick={() => removeExtra(extra.id)}>\r\n          <div></div>\r\n          <div></div>\r\n        </button>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExtraComponent;","import {useState, forwardRef, useImperativeHandle, useRef} from 'react'\r\nimport './TaxComponent.css';\r\n\r\n\r\nconst TaxComponent = forwardRef((props, ref) => {\r\n  const radioRef = useRef(null)\r\n  const seRef = useRef(null)\r\n  const fixRef = useRef(null)\r\n  const [radio, setRadio] = useState(\"se\")\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    get input() {\r\n      return fixRef.current\r\n    },\r\n    get radio() {\r\n      return radioRef.current\r\n    }\r\n  }))\r\n\r\n  return (\r\n    <span className=\"TaxComponent\">\r\n      <p>Income tax:</p>\r\n      <span>\r\n        <p>SE</p>\r\n        <input ref={seRef} onChange={() => setRadio('se')} type=\"radio\" id=\"se\" name=\"se\" value='se' checked={radio === \"se\"}/>\r\n      </span>\r\n      <span>\r\n        <p>Fix</p>\r\n        <input ref={radioRef} onChange={() => setRadio('fix')} type=\"radio\" id=\"fix\" name=\"fix\" value='fix' checked={radio === \"fix\"}/>\r\n        <input ref={fixRef} type=\"percent\" defaultValue=\"0\" disabled={radio === \"se\"}/>\r\n        <p>%</p>\r\n      </span>\r\n    </span>\r\n  )\r\n})\r\n\r\nexport default TaxComponent","import {createContext} from 'react'\r\n\r\nexport const SettingsContext = createContext(null)\r\n","import './SettingsComponent.css';\r\nimport InputComponent from \"../input/InputComponent\";\r\nimport {useRef, useContext, useEffect} from \"react\";\r\nimport {SettingsContext} from \"../../SettingsContext\";\r\n\r\n\r\nexport const SettingsComponent = () => {\r\n  const {settings, setSettings} = useContext(SettingsContext)\r\n  const inputIterations = useRef(null)\r\n  const inputPrecision = useRef(null)\r\n  const selectCurrency = useRef(null)\r\n\r\n  useEffect(() => {\r\n    updateSettings()\r\n  }, [])\r\n\r\n  const updateSettings = () => {\r\n    setSettings({\r\n      iterations: inputIterations.current?.value,\r\n      precision: inputPrecision.current?.value,\r\n      currency: selectCurrency.current?.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <span className=\"SettingsComponent\">\r\n      <InputComponent text=\"Iterations:\"\r\n                      onChange={updateSettings}\r\n                      ref={inputIterations}\r\n                      options={{type: 'text', maxLength: 6, defaultValue: 1000}}/>\r\n      <InputComponent text=\"Precision:\"\r\n                      onChange={updateSettings}\r\n                      ref={inputPrecision}\r\n                      options={{type: 'text', maxLength: 3, defaultValue: 2}}/>\r\n      <span className=\"flex-center\">\r\n        <p>Currency:</p>\r\n        <select ref={selectCurrency} onChange={updateSettings}>\r\n          <option value=\"SEK\">SEK</option>\r\n          <option value=\"USD\">USD</option>\r\n          <option value=\"EUR\">EUR</option>\r\n        </select>\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default SettingsComponent;","import {useState, useRef, useEffect} from 'react'\r\nimport {normal} from 'randtools'\r\nimport './App.css';\r\nimport InputComponent from \"./input/InputComponent\";\r\nimport StatsComponent from \"./stats/StatsComponent\";\r\nimport ChartWrapperComponent from \"./chart-wrapper/ChartWrapperComponent\";\r\nimport AddExtrasComponent from \"./add-extras/AddExtrasComponent\";\r\nimport ExtraComponent from \"./extra/ExtraComponent\";\r\nimport TaxComponent from \"./tax/TaxComponent\";\r\nimport SettingsComponent from \"./settings/SettingsComponent\";\r\nimport {SettingsContext} from \"../SettingsContext\";\r\n\r\n\r\nconst App = () => {\r\n  const today = new Date()\r\n  const todayYear = today.getFullYear()\r\n  const todayMonth = today.getMonth()\r\n\r\n  const [total, setTotal] = useState({})\r\n  const [stats, setStats] = useState({})\r\n  const [expenses, setExpenses] = useState({})\r\n  const [settings, setSettings] = useState({currency: 'SEK'})\r\n  const [extras, setExtras] = useState([])\r\n  const [bottomStats, setBottomStats] = useState({worst: '', best: '', mean: '', median: '', sigma: '', s1: '', s2: ''})\r\n\r\n  const inputAge = useRef(null)\r\n  const inputRetireAt = useRef(null)\r\n  const inputCapital = useRef(null)\r\n  const inputDuration = useRef(null)\r\n  const inputTax = useRef(null)\r\n  const inputSalary = useRef(null)\r\n  const inputSalaryInc = useRef(null)\r\n  const inputCosts = useRef(null)\r\n  const inputCostsInc = useRef(null)\r\n  const inputROI = useRef(null)\r\n  const inputDeviation = useRef(null)\r\n  const inputFees = useRef(null)\r\n  const inputInflation = useRef(null)\r\n\r\n  String.prototype.capitalize = function() {\r\n    return this.charAt(0).toUpperCase() + this.slice(1);\r\n  }\r\n\r\n  const calcTax = (monthly) => {\r\n    return inputTax.current?.radio.checked ? Math.max(parseFloat(inputTax.current.input.value) / 100, 0) || 0 : swedishTax(monthly)\r\n  }\r\n\r\n  const swedishTax = (monthly) => {\r\n    if (monthly <= 10000) {\r\n      return 0.15\r\n    } else if (80000 <= monthly && monthly < 100000) {\r\n      return 0.4\r\n    } else if (100000 <= monthly) {\r\n      return 0.45\r\n    } else {\r\n      return (30.7 + 14.3 * Math.sin(0.0000256 * monthly - 1.3)) / 100\r\n    }\r\n  }\r\n\r\n  const calcMeanMedianSigma = (arr) => {\r\n    const mean = Math.round(arr.reduce((sum, w) => sum + w) / arr.length)\r\n    const median = arr[Math.floor(arr.length / 2)]\r\n    const sigma = Math.round(Math.sqrt(arr.reduce((sum, w) => sum + Math.pow(w - mean, 2), 0) / (arr.length - 1)))\r\n    return {mean: mean, median: median, sigma: sigma}\r\n  }\r\n\r\n  const calcAnnualExtras = (input) => {\r\n    let xtras = Array(Math.max(parseInt(inputDuration.current?.value), 0)).fill(0)\r\n\r\n    input.map(xtra => {\r\n      xtra.period.map((p, i) => {\r\n        let amount = xtra.annual\r\n        const index = Math.max(p - todayYear, 0)\r\n\r\n        if (i === 0) {\r\n          amount += xtra.first\r\n        } else if (i === xtra.period.length - 1) {\r\n          amount += xtra.last\r\n        }\r\n        xtras[index] += amount\r\n      })\r\n    })\r\n    return xtras\r\n  }\r\n\r\n  const addExtra = (extra) => {\r\n    if (extra) {\r\n      setExtras([extra, ...extras])\r\n    }\r\n  }\r\n\r\n  const removeExtra = (id) => {\r\n    setExtras(extras.filter(x => x.id !== id))\r\n  }\r\n\r\n  const analyse = (iterations) => {\r\n    const monthsLeft = Math.max(11 - todayMonth, 0)\r\n    const current = parseFloat(inputCapital.current?.value) || 0\r\n    const fees = parseFloat(inputFees.current?.value) || 0\r\n    const inflation = parseFloat(inputInflation.current?.value) || 0\r\n    const roi = parseFloat(inputROI.current?.value) || 0\r\n    const deviation = parseFloat(inputDeviation.current?.value) || 0\r\n    const salaryInc = 1 + parseFloat(inputSalaryInc.current?.value) / 100 || 1\r\n    const costsInc = 1 + parseFloat(inputCostsInc.current?.value) / 100 || 1\r\n    const workingYears = Math.max(inputRetireAt.current?.value - inputAge.current?.value, 0)\r\n    const annualExtras = calcAnnualExtras(extras)\r\n    const precision = Math.min(1 / settings.precision, 1)\r\n    const inSalary = Math.max(parseFloat(inputSalary.current?.value), 0) || 0\r\n    const inCosts = Math.max(parseFloat(inputCosts.current?.value), 0) || 0\r\n    const investedFirstYear = Math.round(Math.max((inSalary * (1 - calcTax(inSalary)) - inCosts) * monthsLeft, 0))\r\n    let totalsCombinedData = []\r\n    let finalWorth = []\r\n    let avgWorth = [(current + investedFirstYear + (annualExtras[0] < 0 ? -annualExtras[0] : 0)) * iterations]\r\n    let statsData = {sigmas: [], outcomes: []}\r\n\r\n    // perform monte carlo iterations\r\n    let k = 1\r\n    do {\r\n      let salary = Math.max(inSalary, 0) || 0\r\n      let costs = Math.max(inCosts, 0) || 0\r\n\r\n      let totalsData = new Object({\r\n        years: [todayYear],\r\n        worth: [current + investedFirstYear - annualExtras[0]],\r\n        invested: [investedFirstYear],\r\n        fees: [Math.max(Math.round((salary - costs)) * 12 * (fees + inflation)/ 100, 0)],\r\n        expenses: [Math.max(costs * monthsLeft + (annualExtras[0] < 0 ? -annualExtras[0] : 0), 0)]\r\n      })\r\n\r\n      let i = 0\r\n      while (++i < parseFloat(inputDuration.current?.value)) {\r\n        const len = totalsData.years.length\r\n        const toInvest = workingYears && workingYears < i ? -costs * 12 : (salary * (1 - calcTax(salary)) - costs) * 12\r\n        const totalsBeforeFees = toInvest + totalsData.worth[len - 1] + annualExtras[i]\r\n        const netTotal = Math.round(totalsBeforeFees * (1 + (normal.mean(roi, deviation, 3) - (fees + inflation))/ 100))\r\n\r\n        totalsData.years.push(todayYear + i)\r\n        totalsData.invested.push(workingYears && workingYears < i ? totalsData.invested[len - 1] : Math.round(Math.max(toInvest + totalsData.invested[len - 1], 0)))\r\n        totalsData.worth.push(netTotal)\r\n        totalsData.fees.push(Math.round(Math.max(totalsBeforeFees * (fees + inflation)/ 100, 0)))\r\n        totalsData.expenses.push(Math.round(Math.max(costs * 12 + (annualExtras[i] < i ? -annualExtras[i] : i), 0)))\r\n\r\n        avgWorth[i] = (avgWorth[i] || 0) + netTotal\r\n        salary = Math.max(salary * salaryInc, 0)\r\n        costs = Math.max(costs * costsInc ,0)\r\n      }\r\n\r\n      finalWorth.push(totalsData.worth[i - 1])\r\n      totalsCombinedData.push(totalsData)\r\n    } while (k++ < iterations)\r\n\r\n    finalWorth.sort((a, b) => a - b)\r\n    avgWorth = avgWorth.map(d => Math.round(d / totalsCombinedData.length))\r\n\r\n    // calculate distribution\r\n    const {mean, median, sigma} = calcMeanMedianSigma(finalWorth)\r\n    let deviations = {x: [], no: []}\r\n    finalWorth.forEach(w => {\r\n      const diff = mean - w\r\n      const x = diff > 0 ? Math.ceil(diff / (sigma * precision)) : Math.floor(diff / (sigma * precision))\r\n      const deviationNumber = diff > 0 ? Math.ceil(diff / sigma) : Math.floor(diff / sigma)\r\n      deviations.x[x] = (deviations.x[x] || 1) + 1\r\n      deviations.no[deviationNumber] = (deviations.no[deviationNumber] || 1) + 1\r\n    })\r\n\r\n    Object.keys(deviations.x).sort((a, b) => a - b).forEach(k => {\r\n      statsData.sigmas.push(k)\r\n      statsData.outcomes.push(deviations.x[k])\r\n    })\r\n\r\n    // update GUI\r\n    setBottomStats({\r\n      best: [finalWorth[finalWorth.length - 1], settings.currency],\r\n      worst: [finalWorth[0], settings.currency],\r\n      mean: [mean, settings.currency],\r\n      median: [median, settings.currency],\r\n      sigma: [sigma, settings.currency],\r\n      s1: [(100 * ((deviations.no['-1'] || 0) + (deviations.no['1'] || 0)) / totalsCombinedData.length).toPrecision(4), '%'],\r\n      s2: [(100 * ((deviations.no['-1'] || 0) + (deviations.no['1'] || 0) + (deviations.no['-2'] || 0) + (deviations.no['2'] || 0)) / totalsCombinedData.length).toPrecision(4), '%']\r\n    })\r\n\r\n    setTotal({\r\n      labels: totalsCombinedData[0].years,\r\n      datasets: [\r\n        {\r\n          label: 'Total',\r\n          backgroundColor: 'darkslateblue',\r\n          borderColor: 'rgba(0,0,0,1)',\r\n          borderWidth: 2,\r\n          data: avgWorth\r\n        },\r\n        {\r\n          label: 'Invested',\r\n          backgroundColor: 'rgba(0,192,0,1)',\r\n          borderColor: 'rgba(0,0,0,1)',\r\n          borderWidth: 2,\r\n          data: totalsCombinedData[0].invested\r\n        },\r\n      ]\r\n    })\r\n\r\n    setExpenses({\r\n      labels: totalsCombinedData[0].years,\r\n      datasets: [\r\n        {\r\n          label: 'Fees & Inflation',\r\n          backgroundColor: 'rgba(255,100,0,1)',\r\n          borderColor: 'rgba(0,0,0,1)',\r\n          borderWidth: 2,\r\n          data: totalsCombinedData[0].fees\r\n        },\r\n        {\r\n          label: 'Expenses',\r\n          backgroundColor: 'rgba(192,0,0,1)',\r\n          borderColor: 'rgba(0,0,0,1)',\r\n          borderWidth: 2,\r\n          data: totalsCombinedData[0].expenses\r\n        }\r\n      ]\r\n    })\r\n\r\n    setStats({\r\n      labels: statsData.sigmas,\r\n      datasets: [\r\n        {\r\n          backgroundColor: 'darkslateblue',\r\n          borderColor: 'rgba(0,0,0,1)',\r\n          borderWidth: 2,\r\n          data: statsData.outcomes,\r\n          pointRadius: 0\r\n        },\r\n      ]\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{settings, setSettings}}>\r\n      <div className=\"App flex-center\">\r\n        <header className=\"flex-center\">\r\n          <h1>Financial Simulator</h1>\r\n        </header>\r\n        <div className=\"wrapper flex-rows\">\r\n          <div className=\"finance-inputs\">\r\n            <br></br>\r\n            <InputComponent text=\"Your age:\" unit=\"Yrs\" ref={inputAge} options={{type: 'text', maxLength: 2, defaultValue: 25}}/>\r\n            <InputComponent text=\"Retirement age:\" unit=\"Yrs\" ref={inputRetireAt} options={{type: 'text', maxLength: 2, defaultValue: 45}}/>\r\n            <InputComponent text=\"Duration to analyze:\" unit=\"Yrs\" ref={inputDuration} options={{type: 'text', maxLength: 2, defaultValue: 25}}/>\r\n            <InputComponent text=\"Starting capital:\" unit={settings.currency} ref={inputCapital} options={{defaultValue: 250000}}/>\r\n            <hr/>\r\n            <TaxComponent ref={inputTax}/>\r\n            <hr/>\r\n            <InputComponent text=\"Monthly gross salary:\" unit={settings.currency} ref={inputSalary} options={{defaultValue: 32000}}/>\r\n            <InputComponent text=\"Annual salary increase:\" unit=\"%\" ref={inputSalaryInc} options={{type: 'percent', defaultValue: 5}}/>\r\n            <InputComponent text=\"Monthly costs:\" unit={settings.currency} ref={inputCosts} options={{defaultValue: 12000}}/>\r\n            <InputComponent text=\"Annual costs increase:\" unit=\"%\" ref={inputCostsInc} options={{type: 'percent', defaultValue: 2}}/>\r\n            <hr/>\r\n            <InputComponent text=\"Annual ROI excl. fees:\" unit=\"%\" ref={inputROI} options={{type: 'percent', defaultValue: 10.5}}/>\r\n            <InputComponent text=\"Standard deviation:\" unit=\"%\" ref={inputDeviation} options={{type: 'percent', defaultValue: 16}}/>\r\n            <InputComponent text=\"Annual fees:\" unit=\"%\" ref={inputFees} options={{type: 'percent', defaultValue: 3}}/>\r\n            <InputComponent text=\"Inflation:\" unit=\"%\" ref={inputInflation} options={{type: 'percent', defaultValue: 2}}/>\r\n            <hr/>\r\n            <SettingsComponent/>\r\n            <span className=\"flex-center\">\r\n              <button className=\"analyse-button\" onClick={() => analyse(settings.iterations)}>Run Analysis</button>\r\n            </span>\r\n            <hr/>\r\n            <h3>Add custom events:</h3>\r\n            <AddExtrasComponent addExtra={addExtra} currency={settings.currency}/>\r\n            <div className=\"extras\">\r\n              {(extras || []).map(extra => <ExtraComponent key={extra.id} extra={extra} currency={settings.currency} removeExtra={removeExtra}/>)}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-cols\">\r\n            <ChartWrapperComponent type='bar' title='Total Assets' data={total} yLabel={settings.currency} legend={true}/>\r\n            <ChartWrapperComponent type='bar' title='Annual Expenses' data={expenses} yLabel={settings.currency} legend={true}/>\r\n            <ChartWrapperComponent type='bar' title='Distribution' data={stats}\r\n                                   xLabel={settings.iterations ? `Sigma / ${settings.precision}` : 'Sigma'}\r\n                                   yLabel={'No. Outcomes'} legend={false}/>\r\n            {bottomStats.best &&\r\n            <div className=\"bottom-stats\">\r\n              <h3>Statistics summary:</h3>\r\n              <span className=\"flex-cols\">\r\n                {Object.keys(bottomStats).map((s, i) => <StatsComponent key={i} text={s.capitalize() + ':'} stat={bottomStats[s.toLowerCase()]}/>)}\r\n              </span>\r\n            </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <hr/>\r\n          All Rights Reserved Emanuel Slätteby 2021\r\n        </footer>\r\n      </div>\r\n    </SettingsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}